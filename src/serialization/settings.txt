cpp settings{
	struct IntPair{
		int32_t x;
		int32_t y;
		#include "IntPair.h"
	}
	struct UintPair{
		uint32_t x;
		uint32_t y;
		#include "UintPair.h"
	}
	struct DoubleQuadTuple{
		double x0;
		double x1;
		double x2;
		double x3;
		#include "DoubleQuadTuple.h"
	}
	class WindowState{
		IntPair pos;
		UintPair size;
		IntPair label_pos;
		bool using_checkerboard_pattern;
		wstring current_directory;
		wstring current_filename;
		double zoom;
		double fullscreen_zoom;
		bool fullscreen;
		uint32_t zoom_mode;
		uint32_t fullscreen_zoom_mode;
		uint32_t border_size;
		int32_t movement_size;
		DoubleQuadTuple transform;
		#include "WindowState.h"
	}
	class MainSettings{
		uint32_t clamp_strength;
		bool clamp_to_edges;
		bool use_checkerboard_pattern;
		bool center_when_displayed;
		uint32_t zoom_mode_for_new_windows;
		uint32_t fullscreen_zoom_mode_for_new_windows;
		bool keep_application_in_background;
		bool save_state_on_exit;
		#include "MainSettings.h"
	}
	class ApplicationState{
		vector<shared_ptr<WindowState>> windows;
		#include "ApplicationState.h"
	}
	class Shortcuts{
	public:
		map<string, vector<wstring>> shortcuts;
		#include "Shortcuts.h"
	}
	struct Settings{
		shared_ptr<MainSettings> main;
		shared_ptr<ApplicationState> state;
		shared_ptr<Shortcuts> shortcuts;
		#include "Settings.h"
	}
}
